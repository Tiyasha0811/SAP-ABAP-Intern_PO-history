*&---------------------------------------------------------------------*
*& Report ZREPORT_ALV_MM_5
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZREPORT_ALV_MM_5.


TYPE-POOLS: slis.
TABLES: ekko,ekpo,bapiekbe.

TYPES: BEGIN OF ty_ekko,
         ebeln TYPE ekko-ebeln,
         bedat TYPE ebdat,
         bsart TYPE esart,
         bukrs TYPE bukrs,
         lifnr TYPE elifn,
       END OF ty_ekko.


TYPES: BEGIN OF ty_ekpo,
         ebeln      TYPE ebeln,
         ebelp      TYPE ekpo-ebelp,
         ekpo_matnr TYPE matnr,
         txz01      TYPE ekpo-txz01,
         ekpo_MENGE TYPE bstmg,
         ekpo_MEINS TYPE bstme,
         ekpo_werks TYPE ewerk,
       END OF ty_ekpo.



TYPES: BEGIN OF ty_final,
         ebeln      TYPE ebeln,
         ebelp      TYPE ekpo-ebelp,
         bedat      TYPE ebdat,
         bsart      TYPE esart,
         bukrs      TYPE bukrs,
         lifnr      TYPE   elifn,
         ekpo_matnr TYPE matnr,
         ekpo_menge TYPE bstmg,
         ekpo_meins TYPE bstme,
         txz01      TYPE txz01,
         ekpo_werks TYPE ewerk,
       END OF ty_final.




Types: BEGIN OF ty_output,
   po_item  TYPE bapiekbe-po_item,
         gr_doc   TYPE bapiekbe-mat_doc,
         gr_year  TYPE bapiekbe-doc_year,
         gr_date  TYPE bapiekbe-pstng_date,
         gr_qty   TYPE bapiekbe-quantity,
         gr_amt   TYPE bapiekbe-val_loccur,
         gr_hist TYPE bapiekbe-hist_type,
         ir_doc   TYPE bapiekbe-mat_doc,
         ir_year  TYPE bapiekbe-doc_year,
         ir_hist TYPE bapiekbe-hist_type,
         ir_date  TYPE bapiekbe-pstng_date,
         ir_amt   TYPE bapiekbe-val_loccur,
         currency TYPE bapiekbe-currency,
END OF ty_output.

DATA: it_ekko  TYPE STANDARD TABLE OF ty_ekko,
      wa_ekko  TYPE ty_ekko,
      it_ekpo  TYPE STANDARD TABLE OF ty_ekpo,
      wa_ekpo  TYPE ty_ekpo,
      it_FINAL TYPE STANDARD TABLE OF ty_final,
      wa_final TYPE ty_final,
      it_output TYPE STANDARD TABLE OF ty_output,
      wa_output TYPE ty_output.


DATA: it_fieldcat TYPE slis_t_fieldcat_alv,
      wa_fieldcat TYPE slis_fieldcat_alv,
      it_fieldct type slis_t_fieldcat_alv,
      wa_fieldct type slis_fieldcat_alv.

DATA: it_sort TYPE slis_t_sortinfo_alv,
      wa_sort TYPE slis_sortinfo_alv.

data: it_po_item_history type standard table of bapiekbe,
      wa_po_item_history type bapiekbe.



DATA: gs_layout TYPE slis_layout_alv.

SELECTION-SCREEN: BEGIN OF BLOCK a WITH FRAME.
  SELECT-OPTIONS: s_ebeln FOR ekko-ebeln,
                  s_bedat FOR ekko-bedat,
                  s_bsart FOR ekko-bsart.

PARAMETERS: p_bukrs TYPE ekko-bukrs DEFAULT 'EIL' obligatory.
SELECTION-SCREEN: END OF BLOCK a.



AT SELECTION-SCREEN.
  IF s_ebeln IS INITIAL AND s_bedat IS INITIAL.
    MESSAGE 'Please enter either PO No. or PO Date' TYPE 'E'.
  ENDIF.

  IF s_ebeln-high - s_ebeln-low > 1000.
    MESSAGE 'PO Number range should not exceed 600' TYPE 'E'.
  ENDIF.

  IF s_bedat-high - s_bedat-low > 30.
    MESSAGE 'Date range should not exceed 30 days' TYPE 'E'.
  ENDIF.

INITIALIZATION.

START-OF-SELECTION.


  PERFORM fetch_data.

  IF it_final IS INITIAL.
    MESSAGE 'No data available .' TYPE 'S' DISPLAY LIKE 'E'.
  ELSE.
    PERFORM fieldcatalog.
    PERFORM calc.
    PERFORM print_output.
  ENDIF.




*&---------------------------------------------------------------------*
*& Form fetch_data
*&---------------------------------------------------------------------*
FORM fetch_data .

  SELECT ek~ebeln,
      ep~ebelp,
     ek~bedat,
     ek~bsart,
     ek~bukrs,
     ek~lifnr,
     ep~matnr AS ekpo_matnr,
      ep~menge AS ekpo_menge,
      ep~meins AS ekpo_meins,
     ep~txz01,
    ep~werks AS ekpo_werks

    INTO CORRESPONDING FIELDS OF TABLE @it_final
    FROM ekko AS ek
    INNER JOIN ekpo AS ep ON ek~ebeln = ep~ebeln
    WHERE ek~ebeln IN @s_ebeln
    AND ek~bedat IN @s_bedat
      AND ek~bukrs = @p_bukrs
   AND ek~bstyp = 'F'.

ENDFORM.


FORM user_command USING r_ucomm TYPE sy-ucomm
                        rs_selfield TYPE slis_selfield.
      CASE r_ucomm.
      WHEN '&IC1'.  " Double-click or hotspot click
      endcase.
      IF rs_selfield-fieldname = 'EBELN'.
        READ TABLE it_final INTO wa_final INDEX rs_selfield-tabindex.
        CALL FUNCTION 'BAPI_PO_GETDETAIL'
          EXPORTING
            purchaseorder                    = wa_final-ebeln
*           ITEMS                            = 'X'
*           ACCOUNT_ASSIGNMENT               = ' '
*           SCHEDULES                        = ' '
           HISTORY                          = 'X'
*           ITEM_TEXTS                       = ' '
*           HEADER_TEXTS                     = ' '
*           SERVICES                         = ' '
*           CONFIRMATIONS                    = ' '
*           SERVICE_TEXTS                    = ' '
*           EXTENSIONS                       = ' '
*         IMPORTING
*           PO_HEADER                        =
*           PO_ADDRESS                       =
         TABLES
*           PO_HEADER_TEXTS                  =
*           PO_ITEMS                         =
*           PO_ITEM_ACCOUNT_ASSIGNMENT       =
*           PO_ITEM_SCHEDULES                =
*           PO_ITEM_CONFIRMATIONS            =
*           PO_ITEM_TEXTS                    =
            PO_ITEM_HISTORY                  = it_po_item_history
*           PO_ITEM_HISTORY_TOTALS           =
*           PO_ITEM_LIMITS                   =
*           PO_ITEM_CONTRACT_LIMITS          =
*           PO_ITEM_SERVICES                 =
*           PO_ITEM_SRV_ACCASS_VALUES        =
*           RETURN                           =
*           PO_SERVICES_TEXTS                =
*           EXTENSIONOUT                     =
*           NFMETALLITMS                     =
.

        IF it_output IS NOT INITIAL.
          DELETE it_output WHERE po_item NE wa_final-ebelp.
          IF it_output IS NOT INITIAL.
            PERFORM fieldcat.
            PERFORM print USING it_output 'GR and IR History'.
          ENDIF.
        ENDIF.

        LOOP AT it_po_item_history INTO DATA(ls_hist).
          READ TABLE it_output INTO wa_output WITH KEY po_item = ls_hist-po_item BINARY SEARCH.
          IF sy-subrc <> 0.
            CLEAR wa_output.
            wa_output-po_item = ls_hist-po_item.
          ENDIF.

          CASE ls_hist-hist_type.
            WHEN 'E'. " GR
              wa_output-gr_doc  = ls_hist-mat_doc.
              wa_output-gr_year = ls_hist-doc_year.
              wa_output-gr_date = ls_hist-pstng_date.
              wa_output-gr_qty  = ls_hist-quantity.
              wa_output-gr_amt  = ls_hist-val_loccur.
              wa_output-gr_hist = ls_hist-hist_type.
              wa_output-currency = ls_hist-currency.
            WHEN 'Q'. " IR
              wa_output-ir_doc  = ls_hist-mat_doc.
              wa_output-ir_year = ls_hist-doc_year.
              wa_output-ir_hist = ls_hist-hist_type.
              wa_output-ir_date = ls_hist-pstng_date.
              wa_output-ir_amt  = ls_hist-val_loccur.
              wa_output-currency = ls_hist-currency.
            WHEN OTHERS.
              CONTINUE.
          ENDCASE.

          DELETE it_output WHERE po_item = wa_output-po_item.
          APPEND wa_output TO it_output.
        ENDLOOP.
      ENDIF.

ENDFORM.




FORM fieldcatalog.

  DEFINE add_field.
    wa_fieldcat-fieldname = &1.
    wa_fieldcat-seltext_m = &2.
    wa_fieldcat-outputlen = &3.
    APPEND wa_fieldcat TO it_fieldcat.
    CLEAR wa_fieldcat.
  END-OF-DEFINITION.


  add_field 'EBELN'               'PO Number'     15.
  add_field 'EBELP'               'Item No.'      10.
  add_field 'BEDAT'               'PO Date'       12.
  add_field 'BSART'               'Doc. Type'     10.
  add_field 'BUKRS'               'Company Code'  10.
  add_field 'LIFNR'               'Vendor No.'    10.
  add_field 'ekpo_MATNR'          'Material No.'  18.
  add_field 'ekpo_MENGE'          'PO Quantity'   10.
  add_field 'ekpo_MEINS'          'PO UoM'        06.
  add_field 'TXZ01'               'Description'   30.
  add_field 'ekpo_WERKS'          'PLANT'         15.

  LOOP AT it_fieldcat INTO wa_fieldcat.
    CASE wa_fieldcat-fieldname.
      WHEN 'ekpo_MENGE'.
        wa_fieldcat-do_sum = 'X'.
        MODIFY it_fieldcat FROM wa_fieldcat INDEX sy-tabix.
    ENDCASE.
  ENDLOOP.



  READ TABLE it_fieldcat INTO wa_fieldcat WITH KEY fieldname = 'EBELN'.
  IF sy-subrc = 0.
    wa_fieldcat-hotspot = 'X'.
    MODIFY it_fieldcat FROM wa_fieldcat INDEX sy-tabix.
  ENDIF.


ENDFORM.


*&---------------------------------------------------------------------*
*& Form calc
*&---------------------------------------------------------------------*

FORM calc.

  CLEAR wa_sort.
  wa_sort-fieldname = 'EBELN'.
  wa_sort-fieldname = 'EBELP'.
  wa_sort-up = 'X'.
  wa_sort-subtot = 'X'.
  APPEND wa_sort TO it_sort. " No subtotals needed at this level

ENDFORM.



FORM print_output.

  SORT it_final BY ebelp ebeln.
  " Sort the final internal table by PO and Item Number


     gs_layout-no_totalline ='X'.        " Remove grand total line


  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK       = ' '
*     I_BYPASSING_BUFFER      = ' '
*     I_BUFFER_ACTIVE         = ' '
     i_callback_program      = sy-repid
*     I_CALLBACK_PF_STATUS_SET          = ' '
    i_callback_user_command = 'USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE  = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME        = 'ZSTR_MM_1'
*     I_BACKGROUND_ID         = ' '
*     I_GRID_TITLE            =
*     I_GRID_SETTINGS         =
      is_layout               = gs_layout
      it_fieldcat             = it_fieldcat
*     IT_EXCLUDING            =
*     IT_SPECIAL_GROUPS       =
      it_sort                 = it_sort
*     IT_FILTER               =
*     IS_SEL_HIDE             =
*     I_DEFAULT               = 'X'
*     I_SAVE                  = ' '
*     IS_VARIANT              =
*      it_events               = it_events
*     IT_EVENT_EXIT           =
*     IS_PRINT                =
*     IS_REPREP_ID            =
*     I_SCREEN_START_COLUMN   = 0
*     I_SCREEN_START_LINE     = 0
*     I_SCREEN_END_COLUMN     = 0
*     I_SCREEN_END_LINE       = 0
*     I_HTML_HEIGHT_TOP       = 0
*     I_HTML_HEIGHT_END       = 0
*     IT_ALV_GRAPHICS         =
*IT_HYPERLINK                      = 'X'
*     IT_ADD_FIELDCAT         =
*     IT_EXCEPT_QINFO         =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     O_PREVIOUS_SRAL_HANDLER =
*     O_COMMON_HUB            =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER =
*     ES_EXIT_CAUSED_BY_USER  =
    TABLES
      t_outtab                = it_final
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.
  IF sy-subrc <> 0.

  ENDIF.

ENDFORM.

FORM fieldcat.

  DEFINE add_field.
    wa_fieldct-fieldname = &1.
    wa_fieldct-seltext_m = &2.
    wa_fieldct-outputlen = &3.
    APPEND wa_fieldct TO it_fieldct.
    CLEAR wa_fieldct.
  END-OF-DEFINITION.

  add_field 'PO_ITEM'   'Item No.'         10.
  add_field 'GR_DOC'    'GR Doc No.'       15.
  add_field 'GR_YEAR'   'GR Year'          6.
  add_field 'GR_DATE'   'GR Date'          10.
  add_field 'GR_QTY'    'GR Quantity'      10.
  add_field 'GR_AMT'    'GR Amount'        12.
  add_field 'GR_HIST'   'GR HISTORY'       10.
  add_field 'IR_DOC'    'IR Doc No.'       15.
  add_field 'IR_YEAR'   'IR Year'          6.
  ADD_FIELD 'IR_HIST'   'IR HIST'          07.
  add_field 'IR_DATE'   'IR Date'          10.
  add_field 'IR_AMT'    'IR Amount'        12.
  add_field 'CURRENCY'  'Currency'         5.

ENDFORM.

FORM print  USING pt_history TYPE STANDARD TABLE
                   pv_title  TYPE char50.
  CALL FUNCTION 'REUSE_ALV_POPUP_TO_SELECT'
    EXPORTING
      i_title                 = pv_title
*     I_SELECTION             = 'X'
      i_allow_no_selection    = 'X'
*     I_ZEBRA                 = ' '
      i_screen_start_column   = 30
      i_screen_start_line     = 30
      i_screen_end_column     = 120
      i_screen_end_line       = 50
*     I_CHECKBOX_FIELDNAME    =
*     I_LINEMARK_FIELDNAME    =
*     I_SCROLL_TO_SEL_LINE    = 'X'
      i_tabname               = 'z_combined'
*     I_STRUCTURE_NAME        =
      it_fieldcat             = it_fieldct
*     IT_EXCLUDING            =
* i_callback_program      = sy-repid
*  i_callback_user_command = 'user_command'
*     IS_PRIVATE              =
* IMPORTING
*     ES_SELFIELD             =
*     E_EXIT                  =
    TABLES
      t_outtab                = pt_history
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
ENDFORM.
